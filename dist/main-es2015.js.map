{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data.model.ts","./src/app/datas/datas.component.ts","./src/app/datas/datas.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/material/material.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/reading/reading.component.ts","./src/app/reading/reading.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Data } from '../data.model';\nimport { FormGroup, FormControl, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(private httpSvc: HttpClient, private router: Router, private _snackBar: MatSnackBar) { }\n  form = new FormGroup({\n    title: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(5)\n    ]),\n    paragraf: new FormControl(\"\", [\n      Validators.required\n    ])\n  })\n\n  inputTitle: any;\n  inputParagraf: any;\n  ngOnInit(): void {\n  }\n\n  createData() {\n    let data = new Data();\n    data.title = this.inputTitle;\n    data.paragraf = this.inputParagraf;    \n    this.httpSvc.post(\"api\", data).subscribe(res => {\n    })\n    this.router.navigate([\"/\"])\n    this._snackBar.open(\"Saqlandi\",\"ok\", {\n      duration: 2000,\n    });\n\n  }\n  get title(){\n    return this.form.get(\"title\");\n  }\n  get paragraf(){\n    return this.form.get(\"paragraf\");\n  }\n\n\n\n}\n","<mat-card><button style=\"color: turquoise;\" routerLink=\"/\" class=\"btn\">Orqaga</button> </mat-card>\n<br>\n<div class=\"container\">\n    <mat-card>\n        <div style=\"text-align: center;\">\n            <h1>Ma'lumot qo'shish</h1>\n            <small>Malumot qo'shib bizga yordam berayabganingizdan hursandmiz </small>\n            <small>Iltimos foydali shariatimizga tog'ri keladigan ma'lumot qo'shing</small>\n        </div>\n        <br>\n        <form [formGroup]=\"form\">\n            <div class=\"example-form\">\n                <mat-form-field class=\"example-full-width\">\n                    <mat-label>Sarlavha</mat-label>\n                    <input [(ngModel)]=\"inputTitle\" matInput formControlName=\"title\" placeholder=\"Dasturlashni o'rganamiz\">\n                    <mat-error *ngIf=\"title.hasError('required')\">\n                        Iltimos <strong>sarlavhani</strong> to'ldiring\n                    </mat-error>\n                    <mat-error *ngIf=\"title.hasError('minlength')\">\n                        Sarlavhada kamida <strong>5-ta</strong> harf bulishi kerak\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <br>\n            <mat-form-field class=\"example-full-width\">\n                <mat-label>Ma'lumot</mat-label>\n                <textarea rows=\"10\" [(ngModel)]=\"inputParagraf\" matInput formControlName=\"paragraf\" placeholder=\"Dasturlashni o'rganamiz\"></textarea>\n                <mat-error *ngIf=\"paragraf.hasError('required')\">\n                    Iltimos <strong>ma'lumot</strong> kirting\n                </mat-error>\n            </mat-form-field>\n\n        </form>\n        <br>\n        <button [disabled]=\"!inputTitle || !inputParagraf\" style=\"color: turquoise;\" (click)=\"createData()\" mat-raised-button>Saqlash</button>\n    </mat-card>\n\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { DatasComponent } from './datas/datas.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ReadingComponent } from './reading/reading.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"malumotlar\", component: DatasComponent },\n  { path: \"malumotlar/:_id\", component: ReadingComponent },\n  { path: \"data\", component: AdminComponent },\n  { path: \"**\", component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { DatasComponent } from './datas/datas.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ReadingComponent } from './reading/reading.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AdminComponent,\n    DatasComponent,\n    PageNotFoundComponent,\n    ReadingComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,    \n    Ng2SearchPipeModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","  \r\nexport class Data {\r\n    _id: string;\r\n    title: string;\r\n    paragraf: string;\r\n    _v: number\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-datas',\n  templateUrl: './datas.component.html',\n  styleUrls: ['./datas.component.css']\n})\nexport class DatasComponent implements OnInit {\n\n  employees: any[];\n  titles;\n \n\n  constructor(private httpSvc: HttpClient, private router: Router) { }\n  searchData;\n\n  ngOnInit(): void {\n    this.httpSvc.get(\"api\")\n    .subscribe(response =>{\n     this.titles = response;\n    })\n\n     \n  }\n\n  onSelect(title){\n    this.router.navigate([\"malumotlar\", title._id])\n  }\n  \n \n\n}\n","<mat-card>\n    <mat-grid-list cols=\"12\" rowHeight=\"40px\">\n        <mat-grid-tile colspan=\"2\"> <button routerLink=\"/\" class=\"btn\"><i style=\"color:turquoise\" class=\"fas fa-infinity\"></i></button> </mat-grid-tile>\n        <mat-grid-tile colspan=\"8\">\n            <div style=\"font-size: 15px;\" class=\"input-group\">\n                <input style=\"border-radius: 20px;\" [(ngModel)]=\"searchData\" type=\"text\" class=\"form-control\" placeholder=\"izlash uchun yozing...\">\n\n            </div>\n        </mat-grid-tile>\n\n    </mat-grid-list>\n</mat-card>\n\n<br>\n<div class=\"container\">\n    <div>\n        <div *ngFor=\"let title of titles | filter:searchData\">\n            <mat-card (click)=\"onSelect(title)\">\n                <h2>\n                    {{title.title}}\n                </h2>\n            </mat-card>\n            <br>\n\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n}\n","<mat-card>\n    <mat-grid-list cols=\"10\" rowHeight=\"40px\">\n        <mat-grid-tile colspan=\"1\">\n            <button mat-button [matMenuTriggerFor]=\"menu1\"><mat-icon>menu</mat-icon></button>\n            <mat-menu #menu1=\"matMenu\">\n                <button routerLink=\"/malumotlar\" mat-menu-item>Izlash</button>\n                <button routerLink=\"/data\" mat-menu-item>Ma'lumot qo'shish</button>\n            </mat-menu>\n        </mat-grid-tile>\n        <mat-grid-tile id=\"logo\" colspan=\"8\">Cheksizlik</mat-grid-tile>\n        <mat-grid-tile colspan=\"1\"><button mat-icon-button [matMenuTriggerFor]=\"menu2\" aria-label=\"Example icon-button with a menu\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n            <mat-menu #menu2=\"matMenu\">\n                <button mat-menu-item>\n              <mat-icon>dialpad</mat-icon>\n              <span>Redial</span>\n            </button>\n                <button mat-menu-item disabled>\n              <mat-icon>voicemail</mat-icon>\n              <span>Check voice mail</span>\n            </button>\n                <button mat-menu-item>\n              <mat-icon>notifications_off</mat-icon>\n              <span>Disable alerts</span>\n            </button>\n            </mat-menu>\n        </mat-grid-tile>\n\n    </mat-grid-list>\n</mat-card>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n\n<div id=\"div\">\n    <div id=\"text\">\n        <div>Assalomu Aleykum</div>\n        <br>\n        <div>Hush Kelibsiz</div>\n    </div>\n    <br>\n    <div>\n        <button id=\"btn\" mat-raised-button routerLink=\"/malumotlar\">Ma'lumot izlash</button>\n\n        <button id=\"btn\" mat-raised-button routerLink=\"/data\">Ma'lumot qo'shish</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n\n\n\nconst MaterialComponents = [\n  MatButtonModule,\n  MatCardModule,\n  MatGridListModule,\n  MatIconModule,\n  MatDatepickerModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSnackBarModule,\n  MatMenuModule\n];\n\n@NgModule({\n  imports: [MaterialComponents],\n  exports: [MaterialComponents]\n})\nexport class MaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-reading',\n  templateUrl: './reading.component.html',\n  styleUrls: ['./reading.component.css']\n})\nexport class ReadingComponent implements OnInit {\n\n  titleFromDb: \"\";\n  paragrafFromDb: \"\";\n\n  employees;\n  constructor(private httpSvc: HttpClient, private router: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    let id = this.router.snapshot.paramMap.get(\"_id\");\n    \n    this.httpSvc.get(\"api\")\n    .subscribe(response =>{\n      this.employees = response;\n      for(let result of this.employees){\n        if(result._id == id){\n          this.titleFromDb = result.title\n          this.paragrafFromDb =result.paragraf\n        }\n               \n      }\n     \n    })\n    \n  }\n\n}\n","<mat-card><button style=\"color: turquoise;\" routerLink=\"/malumotlar\" mat-button>orqaga</button></mat-card>\n<br>\n<div class=\"container\">\n    <mat-card>\n        <h1>{{titleFromDb}}</h1>\n        <p>{{ paragrafFromDb}}</p>\n    </mat-card>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}